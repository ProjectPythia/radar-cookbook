Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
files = sorted(fs.glob("s3://noaa-nexrad-level2/2013/05/20/KTLX/KTLX20130520_20*"))
files
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNoCredentialsError[0m                        Traceback (most recent call last)
Input [0;32mIn [3][0m, in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0m files [38;5;241m=[39m [38;5;28msorted[39m([43mfs[49m[38;5;241;43m.[39;49m[43mglob[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43ms3://noaa-nexrad-level2/2013/05/20/KTLX/KTLX20130520_20*[39;49m[38;5;124;43m"[39;49m[43m)[49m)
[1;32m      2[0m files

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/fsspec/asyn.py:86[0m, in [0;36msync_wrapper.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m     83[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m     84[0m [38;5;28;01mdef[39;00m [38;5;21mwrapper[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     85[0m     [38;5;28mself[39m [38;5;241m=[39m obj [38;5;129;01mor[39;00m args[[38;5;241m0[39m]
[0;32m---> 86[0m     [38;5;28;01mreturn[39;00m [43msync[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mloop[49m[43m,[49m[43m [49m[43mfunc[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/fsspec/asyn.py:66[0m, in [0;36msync[0;34m(loop, func, timeout, *args, **kwargs)[0m
[1;32m     64[0m     [38;5;28;01mraise[39;00m FSTimeoutError [38;5;28;01mfrom[39;00m [38;5;21;01mreturn_result[39;00m
[1;32m     65[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(return_result, [38;5;167;01mBaseException[39;00m):
[0;32m---> 66[0m     [38;5;28;01mraise[39;00m return_result
[1;32m     67[0m [38;5;28;01melse[39;00m:
[1;32m     68[0m     [38;5;28;01mreturn[39;00m return_result

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/fsspec/asyn.py:26[0m, in [0;36m_runner[0;34m(event, coro, result, timeout)[0m
[1;32m     24[0m     coro [38;5;241m=[39m asyncio[38;5;241m.[39mwait_for(coro, timeout[38;5;241m=[39mtimeout)
[1;32m     25[0m [38;5;28;01mtry[39;00m:
[0;32m---> 26[0m     result[[38;5;241m0[39m] [38;5;241m=[39m [38;5;28;01mawait[39;00m coro
[1;32m     27[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m ex:
[1;32m     28[0m     result[[38;5;241m0[39m] [38;5;241m=[39m ex

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/s3fs/core.py:679[0m, in [0;36mS3FileSystem._glob[0;34m(self, path, **kwargs)[0m
[1;32m    677[0m [38;5;28;01mif[39;00m path[38;5;241m.[39mstartswith([38;5;124m"[39m[38;5;124m*[39m[38;5;124m"[39m):
[1;32m    678[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mCannot traverse all of S3[39m[38;5;124m"[39m)
[0;32m--> 679[0m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28msuper[39m()[38;5;241m.[39m_glob(path, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/fsspec/asyn.py:640[0m, in [0;36mAsyncFileSystem._glob[0;34m(self, path, **kwargs)[0m
[1;32m    637[0m     root [38;5;241m=[39m [38;5;124m"[39m[38;5;124m"[39m
[1;32m    638[0m     depth [38;5;241m=[39m [38;5;28;01mNone[39;00m [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124m**[39m[38;5;124m"[39m [38;5;129;01min[39;00m path [38;5;28;01melse[39;00m path[ind [38;5;241m+[39m [38;5;241m1[39m :][38;5;241m.[39mcount([38;5;124m"[39m[38;5;124m/[39m[38;5;124m"[39m) [38;5;241m+[39m [38;5;241m1[39m
[0;32m--> 640[0m allpaths [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_find(
[1;32m    641[0m     root, maxdepth[38;5;241m=[39mdepth, withdirs[38;5;241m=[39m[38;5;28;01mTrue[39;00m, detail[38;5;241m=[39m[38;5;28;01mTrue[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs
[1;32m    642[0m )
[1;32m    643[0m [38;5;66;03m# Escape characters special to python regex, leaving our supported[39;00m
[1;32m    644[0m [38;5;66;03m# special characters in place.[39;00m
[1;32m    645[0m [38;5;66;03m# See https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html[39;00m
[1;32m    646[0m [38;5;66;03m# for shell globbing details.[39;00m
[1;32m    647[0m pattern [38;5;241m=[39m (
[1;32m    648[0m     [38;5;124m"[39m[38;5;124m^[39m[38;5;124m"[39m
[1;32m    649[0m     [38;5;241m+[39m (
[0;32m   (...)[0m
[1;32m    664[0m     [38;5;241m+[39m [38;5;124m"[39m[38;5;124m$[39m[38;5;124m"[39m
[1;32m    665[0m )

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/s3fs/core.py:706[0m, in [0;36mS3FileSystem._find[0;34m(self, path, maxdepth, withdirs, detail, prefix)[0m
[1;32m    702[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    703[0m         [38;5;124m"[39m[38;5;124mCan not specify [39m[38;5;124m'[39m[38;5;124mprefix[39m[38;5;124m'[39m[38;5;124m option alongside [39m[38;5;124m'[39m[38;5;124mwithdirs[39m[38;5;124m'[39m[38;5;124m/[39m[38;5;124m'[39m[38;5;124mmaxdepth[39m[38;5;124m'[39m[38;5;124m options.[39m[38;5;124m"[39m
[1;32m    704[0m     )
[1;32m    705[0m [38;5;28;01mif[39;00m maxdepth:
[0;32m--> 706[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28msuper[39m()[38;5;241m.[39m_find(
[1;32m    707[0m         bucket [38;5;241m+[39m [38;5;124m"[39m[38;5;124m/[39m[38;5;124m"[39m [38;5;241m+[39m key, maxdepth[38;5;241m=[39mmaxdepth, withdirs[38;5;241m=[39mwithdirs, detail[38;5;241m=[39mdetail
[1;32m    708[0m     )
[1;32m    709[0m [38;5;66;03m# TODO: implement find from dircache, if all listings are present[39;00m
[1;32m    710[0m [38;5;66;03m# if refresh is False:[39;00m
[1;32m    711[0m [38;5;66;03m#     out = incomplete_tree_dirs(self.dircache, path)[39;00m
[0;32m   (...)[0m
[1;32m    716[0m [38;5;66;03m#         return super().find(path)[39;00m
[1;32m    717[0m [38;5;66;03m#     # else: we refresh anyway, having at least two missing trees[39;00m
[1;32m    718[0m out [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_lsdir(path, delimiter[38;5;241m=[39m[38;5;124m"[39m[38;5;124m"[39m, prefix[38;5;241m=[39mprefix)

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/fsspec/asyn.py:695[0m, in [0;36mAsyncFileSystem._find[0;34m(self, path, maxdepth, withdirs, **kwargs)[0m
[1;32m    693[0m detail [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mdetail[39m[38;5;124m"[39m, [38;5;28;01mFalse[39;00m)
[1;32m    694[0m [38;5;66;03m# async for?[39;00m
[0;32m--> 695[0m [38;5;28;01masync[39;00m [38;5;28;01mfor[39;00m _, dirs, files [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_walk(path, maxdepth, detail[38;5;241m=[39m[38;5;28;01mTrue[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    696[0m     [38;5;28;01mif[39;00m withdirs:
[1;32m    697[0m         files[38;5;241m.[39mupdate(dirs)

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/s3fs/core.py:1793[0m, in [0;36mS3FileSystem._walk[0;34m(self, path, maxdepth, **kwargs)[0m
[1;32m   1791[0m [38;5;28;01mif[39;00m path [38;5;129;01min[39;00m [[38;5;124m"[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m*[39m[38;5;124m"[39m] [38;5;241m+[39m [[38;5;124m"[39m[38;5;132;01m{}[39;00m[38;5;124m://[39m[38;5;124m"[39m[38;5;241m.[39mformat(p) [38;5;28;01mfor[39;00m p [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprotocol]:
[1;32m   1792[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mCannot crawl all of S3[39m[38;5;124m"[39m)
[0;32m-> 1793[0m [38;5;28;01masync[39;00m [38;5;28;01mfor[39;00m _ [38;5;129;01min[39;00m [38;5;28msuper[39m()[38;5;241m.[39m_walk(path, maxdepth[38;5;241m=[39mmaxdepth, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1794[0m     [38;5;28;01myield[39;00m _

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/fsspec/asyn.py:567[0m, in [0;36mAsyncFileSystem._walk[0;34m(self, path, maxdepth, **kwargs)[0m
[1;32m    565[0m detail [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mdetail[39m[38;5;124m"[39m, [38;5;28;01mFalse[39;00m)
[1;32m    566[0m [38;5;28;01mtry[39;00m:
[0;32m--> 567[0m     listing [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_ls(path, detail[38;5;241m=[39m[38;5;28;01mTrue[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    568[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mFileNotFoundError[39;00m, [38;5;167;01mIOError[39;00m):
[1;32m    569[0m     [38;5;28;01mif[39;00m detail:

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/s3fs/core.py:863[0m, in [0;36mS3FileSystem._ls[0;34m(self, path, detail, refresh)[0m
[1;32m    861[0m     files [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_lsbuckets(refresh)
[1;32m    862[0m [38;5;28;01melse[39;00m:
[0;32m--> 863[0m     files [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_lsdir(path, refresh)
[1;32m    864[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m files [38;5;129;01mand[39;00m [38;5;124m"[39m[38;5;124m/[39m[38;5;124m"[39m [38;5;129;01min[39;00m path:
[1;32m    865[0m         files [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_lsdir([38;5;28mself[39m[38;5;241m.[39m_parent(path), refresh[38;5;241m=[39mrefresh)

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/s3fs/core.py:646[0m, in [0;36mS3FileSystem._lsdir[0;34m(self, path, refresh, max_items, delimiter, prefix)[0m
[1;32m    644[0m files [38;5;241m=[39m []
[1;32m    645[0m dircache [38;5;241m=[39m []
[0;32m--> 646[0m [38;5;28;01masync[39;00m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m it:
[1;32m    647[0m     dircache[38;5;241m.[39mextend(i[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mCommonPrefixes[39m[38;5;124m"[39m, []))
[1;32m    648[0m     [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m i[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mContents[39m[38;5;124m"[39m, []):

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/paginate.py:32[0m, in [0;36mAioPageIterator.__anext__[0;34m(self)[0m
[1;32m     29[0m [38;5;28mself[39m[38;5;241m.[39m_inject_starting_params(current_kwargs)
[1;32m     31[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m---> 32[0m     response [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_make_request(current_kwargs)
[1;32m     33[0m     parsed [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_extract_parsed_response(response)
[1;32m     34[0m     [38;5;28;01mif[39;00m first_request:
[1;32m     35[0m         [38;5;66;03m# The first request is handled differently.  We could[39;00m
[1;32m     36[0m         [38;5;66;03m# possibly have a resume/starting token that tells us where[39;00m
[1;32m     37[0m         [38;5;66;03m# to index into the retrieved page.[39;00m

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/client.py:251[0m, in [0;36mAioBaseClient._make_api_call[0;34m(self, operation_name, api_params)[0m
[1;32m    249[0m [38;5;28;01melse[39;00m:
[1;32m    250[0m     apply_request_checksum(request_dict)
[0;32m--> 251[0m     http, parsed_response [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_make_request(
[1;32m    252[0m         operation_model, request_dict, request_context)
[1;32m    254[0m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mmeta[38;5;241m.[39mevents[38;5;241m.[39memit(
[1;32m    255[0m     [38;5;124m'[39m[38;5;124mafter-call.[39m[38;5;132;01m{service_id}[39;00m[38;5;124m.[39m[38;5;132;01m{operation_name}[39;00m[38;5;124m'[39m[38;5;241m.[39mformat(
[1;32m    256[0m         service_id[38;5;241m=[39mservice_id,
[0;32m   (...)[0m
[1;32m    259[0m     model[38;5;241m=[39moperation_model, context[38;5;241m=[39mrequest_context
[1;32m    260[0m )
[1;32m    262[0m [38;5;28;01mif[39;00m http[38;5;241m.[39mstatus_code [38;5;241m>[39m[38;5;241m=[39m [38;5;241m300[39m:

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/client.py:271[0m, in [0;36mAioBaseClient._make_request[0;34m(self, operation_model, request_dict, request_context)[0m
[1;32m    269[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m_make_request[39m([38;5;28mself[39m, operation_model, request_dict, request_context):
[1;32m    270[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 271[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_endpoint[38;5;241m.[39mmake_request(operation_model, request_dict)
[1;32m    272[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m e:
[1;32m    273[0m         [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mmeta[38;5;241m.[39mevents[38;5;241m.[39memit(
[1;32m    274[0m             [38;5;124m'[39m[38;5;124mafter-call-error.[39m[38;5;132;01m{service_id}[39;00m[38;5;124m.[39m[38;5;132;01m{operation_name}[39;00m[38;5;124m'[39m[38;5;241m.[39mformat(
[1;32m    275[0m                 service_id[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_service_model[38;5;241m.[39mservice_id[38;5;241m.[39mhyphenize(),
[1;32m    276[0m                 operation_name[38;5;241m=[39moperation_model[38;5;241m.[39mname),
[1;32m    277[0m             exception[38;5;241m=[39me, context[38;5;241m=[39mrequest_context
[1;32m    278[0m         )

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/endpoint.py:76[0m, in [0;36mAioEndpoint._send_request[0;34m(self, request_dict, operation_model)[0m
[1;32m     74[0m context [38;5;241m=[39m request_dict[[38;5;124m'[39m[38;5;124mcontext[39m[38;5;124m'[39m]
[1;32m     75[0m [38;5;28mself[39m[38;5;241m.[39m_update_retries_context(context, attempts)
[0;32m---> 76[0m request [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mcreate_request(request_dict, operation_model)
[1;32m     77[0m context [38;5;241m=[39m request_dict[[38;5;124m'[39m[38;5;124mcontext[39m[38;5;124m'[39m]
[1;32m     78[0m success_response, exception [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_get_response(
[1;32m     79[0m     request, operation_model, context)

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/endpoint.py:67[0m, in [0;36mAioEndpoint.create_request[0;34m(self, params, operation_model)[0m
[1;32m     63[0m     service_id [38;5;241m=[39m operation_model[38;5;241m.[39mservice_model[38;5;241m.[39mservice_id[38;5;241m.[39mhyphenize()
[1;32m     64[0m     event_name [38;5;241m=[39m [38;5;124m'[39m[38;5;124mrequest-created.[39m[38;5;132;01m{service_id}[39;00m[38;5;124m.[39m[38;5;132;01m{op_name}[39;00m[38;5;124m'[39m[38;5;241m.[39mformat(
[1;32m     65[0m         service_id[38;5;241m=[39mservice_id,
[1;32m     66[0m         op_name[38;5;241m=[39moperation_model[38;5;241m.[39mname)
[0;32m---> 67[0m     [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_event_emitter[38;5;241m.[39memit(event_name, request[38;5;241m=[39mrequest,
[1;32m     68[0m                                    operation_name[38;5;241m=[39moperation_model[38;5;241m.[39mname)
[1;32m     69[0m prepared_request [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mprepare_request(request)
[1;32m     70[0m [38;5;28;01mreturn[39;00m prepared_request

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/hooks.py:50[0m, in [0;36mAioHierarchicalEmitter._emit[0;34m(self, event_name, kwargs, stop_on_response)[0m
[1;32m     47[0m logger[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mEvent [39m[38;5;132;01m%s[39;00m[38;5;124m: calling handler [39m[38;5;132;01m%s[39;00m[38;5;124m'[39m, event_name, handler)
[1;32m     49[0m [38;5;66;03m# Await the handler if its a coroutine.[39;00m
[0;32m---> 50[0m response [38;5;241m=[39m [38;5;28;01mawait[39;00m resolve_awaitable(handler([38;5;241m*[39m[38;5;241m*[39mkwargs))
[1;32m     51[0m responses[38;5;241m.[39mappend((handler, response))
[1;32m     52[0m [38;5;28;01mif[39;00m stop_on_response [38;5;129;01mand[39;00m response [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/_helpers.py:11[0m, in [0;36mresolve_awaitable[0;34m(obj)[0m
[1;32m      9[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21mresolve_awaitable[39m(obj):
[1;32m     10[0m     [38;5;28;01mif[39;00m inspect[38;5;241m.[39misawaitable(obj):
[0;32m---> 11[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m obj
[1;32m     13[0m     [38;5;28;01mreturn[39;00m obj

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/signers.py:16[0m, in [0;36mAioRequestSigner.handler[0;34m(self, operation_name, request, **kwargs)[0m
[1;32m     11[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21mhandler[39m([38;5;28mself[39m, operation_name[38;5;241m=[39m[38;5;28;01mNone[39;00m, request[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     12[0m     [38;5;66;03m# This is typically hooked up to the "request-created" event[39;00m
[1;32m     13[0m     [38;5;66;03m# from a client's event emitter.  When a new request is created[39;00m
[1;32m     14[0m     [38;5;66;03m# this method is invoked to sign the request.[39;00m
[1;32m     15[0m     [38;5;66;03m# Don't call this method directly.[39;00m
[0;32m---> 16[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39msign(operation_name, request)

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/aiobotocore/signers.py:63[0m, in [0;36mAioRequestSigner.sign[0;34m(self, operation_name, request, region_name, signing_type, expires_in, signing_name)[0m
[1;32m     60[0m     [38;5;28;01melse[39;00m:
[1;32m     61[0m         [38;5;28;01mraise[39;00m e
[0;32m---> 63[0m [43mauth[49m[38;5;241;43m.[39;49m[43madd_auth[49m[43m([49m[43mrequest[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/radar-cookbook-dev/lib/python3.8/site-packages/botocore/auth.py:388[0m, in [0;36mSigV4Auth.add_auth[0;34m(self, request)[0m
[1;32m    386[0m [38;5;28;01mdef[39;00m [38;5;21madd_auth[39m([38;5;28mself[39m, request):
[1;32m    387[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mcredentials [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 388[0m         [38;5;28;01mraise[39;00m NoCredentialsError()
[1;32m    389[0m     datetime_now [38;5;241m=[39m datetime[38;5;241m.[39mdatetime[38;5;241m.[39mutcnow()
[1;32m    390[0m     request[38;5;241m.[39mcontext[[38;5;124m'[39m[38;5;124mtimestamp[39m[38;5;124m'[39m] [38;5;241m=[39m datetime_now[38;5;241m.[39mstrftime(SIGV4_TIMESTAMP)

[0;31mNoCredentialsError[0m: Unable to locate credentials
NoCredentialsError: Unable to locate credentials

