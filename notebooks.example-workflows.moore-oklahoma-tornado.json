{"version":2,"kind":"Notebook","sha256":"83a7d1286ab02ce696ca65455a09edbc1e6e589494bee6c932b86acb91d7aeaf","slug":"notebooks.example-workflows.moore-oklahoma-tornado","location":"/notebooks/example-workflows/moore-oklahoma-tornado.ipynb","dependencies":[],"frontmatter":{"title":"Looking at NEXRAD Data from Moore, Oklahoma","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"authors":[{"nameParsed":{"literal":"Max Grover","given":"Max","family":"Grover"},"name":"Max Grover","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Zachary Sherman","given":"Zachary","family":"Sherman"},"name":"Zachary Sherman","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Milind Sharma","given":"Milind","family":"Sharma"},"name":"Milind Sharma","id":"contributors-myst-generated-uid-2"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/radar-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"abbreviations":{"ARM":"Atmospheric Radiation Measurement"},"numbering":{"title":{"offset":1}},"source_url":"https://github.com/projectpythia/radar-cookbook/blob/main/notebooks/example-workflows/moore-oklahoma-tornado.ipynb","edit_url":"https://github.com/projectpythia/radar-cookbook/edit/main/notebooks/example-workflows/moore-oklahoma-tornado.ipynb","thumbnail":"/radar-cookbook/build/sample-nexrad-moore-a6fbbd82005e37f2caeabfb754045859.png","exports":[{"format":"ipynb","filename":"moore-oklahoma-tornado.ipynb","url":"/radar-cookbook/build/moore-oklahoma-torna-0530059024788df934c4a6882506d8ac.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/radar-cookbook/build/sample-nexrad-moore-a6fbbd82005e37f2caeabfb754045859.png","alt":"ARM Logo","width":600,"key":"ENVNlAYF15","urlSource":"../images/sample-nexrad-moore.png"}],"key":"ulMx48PNK1"}],"key":"OxSOAPF8Po"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Looking at NEXRAD Data from Moore, Oklahoma","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GuINtg9AIT"}],"identifier":"looking-at-nexrad-data-from-moore-oklahoma","label":"Looking at NEXRAD Data from Moore, Oklahoma","html_id":"looking-at-nexrad-data-from-moore-oklahoma","implicit":true,"key":"JNVtqQ1fcn"},{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"nV4EAusYY7"}],"key":"y4ZukVODoo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gaa6ChOYSQ"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"b7AwD30cRC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QYjOUswga0"}],"key":"tftYSO689z"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to access NEXRAD data from AWS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GPXOF1hb63"}],"key":"CAKHKKyMy2"}],"key":"OW6dmkzYCm"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to read this data into Py-ART","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"BP4aCzjZOm"}],"key":"EBQKiO3Ob6"}],"key":"KdbvPooMkt"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to customize your plots and maps","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TMHPMUDmPT"}],"key":"lnbfZFjIBG"}],"key":"kdoTE5JdYl"}],"key":"hHaviCQzNd"},{"type":"heading","depth":2,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"cS6dY36Pvi"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"xZndb5aJSL"},{"type":"table","position":{"start":{"line":10,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"t2rsWJR9Gq"}],"key":"EEUgS2bkrW"},{"type":"tableCell","header":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"lJUO4lnbak"}],"key":"u8BjE1eF8U"},{"type":"tableCell","header":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"f5UQg1IulN"}],"key":"nht6bbgad0"}],"key":"esCsK9yA4T"},{"type":"tableRow","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"kmXtBpOHc2"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy","key":"RAhNoZi8kq"}],"key":"wKzfJ2BjGY"},{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Gdg69zC1Rg"}],"key":"bZq1U1jCG5"},{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Projections and Features","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"IYZseV4ytU"}],"key":"xtdesePADd"}],"key":"qTW01ZOl3b"},{"type":"tableRow","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Matplotlib Basics","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"GzbkjM1Euh"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics","key":"sh0bYjVhUC"}],"key":"xMT2LqlkN4"},{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"L0mG9w1LTj"}],"key":"nEK2M4XR9b"},{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Basic plotting","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Su7fk9QrA5"}],"key":"EfmIz9oZ31"}],"key":"Gn4rnVWX3C"},{"type":"tableRow","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"link","url":"/notebooks/foundations/pyart-basics","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Py-ART Basics","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Z5qFhgmqGG"}],"urlSource":"../foundations/pyart-basics","dataUrl":"/notebooks.foundations.pyart-basics.json","internal":true,"protocol":"file","key":"VAyLMYWtiQ"}],"key":"bWjrRTWaSf"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"PIInL1mk1M"}],"key":"zOmY0cHBQq"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"IO/Visualization","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Oe1Urf6PdO"}],"key":"ievk4j8biB"}],"key":"Z9iBWubYQP"}],"key":"ZzKKRZ5Rb7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"paragraph","children":[{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"LLfdrTogEz"}],"key":"xDgrUieTHL"},{"type":"text","value":": 45 minutes","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Uy3JykD4Xs"}],"key":"nFNOHDUV2b"}],"key":"q7VAofzHtn"}],"key":"HyuS4ZANEB"},{"type":"thematicBreak","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"RDIii6dyBZ"}],"key":"DErr6GC1b5"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mchtJ9WDRY"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"gCSiDavgV3"}],"visibility":"show","key":"vYJ4Que7ls"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import pyart\nimport fsspec\nfrom metpy.plots import USCOUNTIES\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\nimport warnings\nwarnings.filterwarnings(\"ignore\")","key":"LpqEaZ7hqx"},{"type":"output","id":"JIHfrnwfGU6ElhxOPk28f","data":[{"output_type":"stream","name":"stdout","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"N6hmph9thv"}],"key":"VelSCOtCIM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How to Access NEXRAD Data from Amazon Web Services (AWS)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w2L6EDNNUI"}],"identifier":"how-to-access-nexrad-data-from-amazon-web-services-aws","label":"How to Access NEXRAD Data from Amazon Web Services (AWS)","html_id":"how-to-access-nexrad-data-from-amazon-web-services-aws","implicit":true,"key":"LEO0JPKSvC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s start first with NEXRAD Level 2 data, which is ground-based radar data collected by the National Oceanic and Atmospheric Administration (NOAA), as a part of the National Weather Service (NWS) observing network.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XQimCgyFcX"}],"key":"gvX7bqXEFA"}],"key":"kYO21L9YmY"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Level 2 Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cTjwylgAAz"}],"identifier":"level-2-data","label":"Level 2 Data","html_id":"level-2-data","implicit":true,"key":"IJP15vBxzL"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Level 2 data includes all of the fields in a single file - for example, a file may include:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aF4ghxGKkk"}],"key":"Z4aFiG1JXj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Reflectivity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PaQq1qU7qP"}],"key":"kRRiGpyoXJ"}],"key":"xTFe6tSvUF"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Velocity","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SHvqabba8m"}],"key":"kI1x3IhEbP"}],"key":"E4LNdKHG2y"}],"key":"fvtaZPoSpL"}],"visibility":"show","key":"m3ioYIKeTW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Search for Data from the Moore, Oklahoma Tornado (May 20, 2013)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FjDgeEEwIz"}],"identifier":"search-for-data-from-the-moore-oklahoma-tornado-may-20-2013","label":"Search for Data from the Moore, Oklahoma Tornado (May 20, 2013)","html_id":"search-for-data-from-the-moore-oklahoma-tornado-may-20-2013","implicit":true,"key":"HOcULxaX9H"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Data We will access data from the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZVuDczSNGj"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"noaa-nexrad-level2 bucket","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zuVDvy7PL1"}],"key":"JCsGZzOda8"},{"type":"text","value":", with the data organized as:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BCve6iQjQH"}],"key":"NOuLEjUznm"},{"type":"code","lang":"","value":"s3://noaa-nexrad-level2/year/month/date/radarsite/{radarsite}{year}{month}{date}_{hour}{minute}{second}_V06","position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"key":"HXIrzgT5id"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"We can use ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XP0fvs7peS"},{"type":"link","url":"https://filesystem-spec.readthedocs.io/en/latest/","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"fsspec","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"bRLOhcBmYz"}],"urlSource":"https://filesystem-spec.readthedocs.io/en/latest/","key":"rAdUbYgLq8"},{"type":"text","value":", a tool to work with filesystems in Python, to search through the bucket to find our files!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DVi6vQBozB"}],"key":"qjsbeH9KwY"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"We start first by setting up our ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"PGkK0IkAbu"},{"type":"link","url":"https://aws.amazon.com/s3/","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"AWS S3 filesystem","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"aILFkA9C1L"}],"urlSource":"https://aws.amazon.com/s3/","key":"xLEoYGBxag"}],"key":"woNleZTgUW"}],"key":"IFvdAA0IQX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fs = fsspec.filesystem(\"s3\", anon=True)","key":"CUsnYsmReA"},{"type":"output","id":"azOFjYrfBwY0z4KqDQEUe","data":[],"key":"g5XjpriwLp"}],"key":"WFLoLoEof2"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Once we setup our filesystem, we can list files from May 20, 2013 from the NWS Oklahoma City, Oklahoma (KTLX) site, around 2000 UTC.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RZ8UzkMW1Y"}],"key":"FyGSNaHzF9"}],"key":"EQcJpaEBiY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"files = sorted(fs.glob(\"s3://noaa-nexrad-level2/2013/05/20/KTLX/KTLX20130520_20*\"))\nfiles","key":"ov873eRVUr"},{"type":"output","id":"zL_H09Qqik5Rw-rJFiVX-","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mClientError\u001b[39m                               Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/s3fs/core.py:755\u001b[39m, in \u001b[36mS3FileSystem._lsdir\u001b[39m\u001b[34m(self, path, refresh, max_items, delimiter, prefix, versions)\u001b[39m\n\u001b[32m    754\u001b[39m files = []\n\u001b[32m--> \u001b[39m\u001b[32m755\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mfor\u001b[39;00m c \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m._iterdir(\n\u001b[32m    756\u001b[39m     bucket,\n\u001b[32m    757\u001b[39m     max_items=max_items,\n\u001b[32m    758\u001b[39m     delimiter=delimiter,\n\u001b[32m    759\u001b[39m     prefix=prefix,\n\u001b[32m    760\u001b[39m     versions=versions,\n\u001b[32m    761\u001b[39m ):\n\u001b[32m    762\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m c[\u001b[33m\"\u001b[39m\u001b[33mtype\u001b[39m\u001b[33m\"\u001b[39m] == \u001b[33m\"\u001b[39m\u001b[33mdirectory\u001b[39m\u001b[33m\"\u001b[39m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/s3fs/core.py:805\u001b[39m, in \u001b[36mS3FileSystem._iterdir\u001b[39m\u001b[34m(self, bucket, max_items, delimiter, prefix, versions)\u001b[39m\n\u001b[32m    798\u001b[39m it = pag.paginate(\n\u001b[32m    799\u001b[39m     Bucket=bucket,\n\u001b[32m    800\u001b[39m     Prefix=prefix,\n\u001b[32m   (...)\u001b[39m\u001b[32m    803\u001b[39m     **\u001b[38;5;28mself\u001b[39m.req_kw,\n\u001b[32m    804\u001b[39m )\n\u001b[32m--> \u001b[39m\u001b[32m805\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m it:\n\u001b[32m    806\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m l \u001b[38;5;129;01min\u001b[39;00m i.get(\u001b[33m\"\u001b[39m\u001b[33mCommonPrefixes\u001b[39m\u001b[33m\"\u001b[39m, []):\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/aiobotocore/paginate.py:39\u001b[39m, in \u001b[36mAioPageIterator.__anext__\u001b[39m\u001b[34m(self)\u001b[39m\n\u001b[32m     38\u001b[39m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m39\u001b[39m     response = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._make_request(current_kwargs)\n\u001b[32m     40\u001b[39m     parsed = \u001b[38;5;28mself\u001b[39m._extract_parsed_response(response)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/aiobotocore/context.py:36\u001b[39m, in \u001b[36mwith_current_context.<locals>.decorator.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwargs)\u001b[39m\n\u001b[32m     35\u001b[39m     \u001b[38;5;28;01mawait\u001b[39;00m resolve_awaitable(hook())\n\u001b[32m---> \u001b[39m\u001b[32m36\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m func(*args, **kwargs)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/aiobotocore/paginate.py:19\u001b[39m, in \u001b[36mAioPageIterator._make_request\u001b[39m\u001b[34m(self, current_kwargs)\u001b[39m\n\u001b[32m     17\u001b[39m \u001b[38;5;129m@with_current_context\u001b[39m(partial(register_feature_id, \u001b[33m'\u001b[39m\u001b[33mPAGINATOR\u001b[39m\u001b[33m'\u001b[39m))\n\u001b[32m     18\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_make_request\u001b[39m(\u001b[38;5;28mself\u001b[39m, current_kwargs):\n\u001b[32m---> \u001b[39m\u001b[32m19\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._method(**current_kwargs)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/aiobotocore/context.py:36\u001b[39m, in \u001b[36mwith_current_context.<locals>.decorator.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwargs)\u001b[39m\n\u001b[32m     35\u001b[39m     \u001b[38;5;28;01mawait\u001b[39;00m resolve_awaitable(hook())\n\u001b[32m---> \u001b[39m\u001b[32m36\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m func(*args, **kwargs)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/aiobotocore/client.py:424\u001b[39m, in \u001b[36mAioBaseClient._make_api_call\u001b[39m\u001b[34m(self, operation_name, api_params)\u001b[39m\n\u001b[32m    423\u001b[39m     error_class = \u001b[38;5;28mself\u001b[39m.exceptions.from_code(error_code)\n\u001b[32m--> \u001b[39m\u001b[32m424\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m error_class(parsed_response, operation_name)\n\u001b[32m    425\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[31mClientError\u001b[39m: An error occurred (AccessDenied) when calling the ListObjectsV2 operation: Access Denied\n\nThe above exception was the direct cause of the following exception:\n\n\u001b[31mPermissionError\u001b[39m                           Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[3]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m files = \u001b[38;5;28msorted\u001b[39m(\u001b[43mfs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mglob\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43ms3://noaa-nexrad-level2/2013/05/20/KTLX/KTLX20130520_20*\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m)\n\u001b[32m      2\u001b[39m files\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/fsspec/asyn.py:118\u001b[39m, in \u001b[36msync_wrapper.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwargs)\u001b[39m\n\u001b[32m    115\u001b[39m \u001b[38;5;129m@functools\u001b[39m.wraps(func)\n\u001b[32m    116\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mwrapper\u001b[39m(*args, **kwargs):\n\u001b[32m    117\u001b[39m     \u001b[38;5;28mself\u001b[39m = obj \u001b[38;5;129;01mor\u001b[39;00m args[\u001b[32m0\u001b[39m]\n\u001b[32m--> \u001b[39m\u001b[32m118\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43msync\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mloop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfunc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/fsspec/asyn.py:103\u001b[39m, in \u001b[36msync\u001b[39m\u001b[34m(loop, func, timeout, *args, **kwargs)\u001b[39m\n\u001b[32m    101\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m FSTimeoutError \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mreturn_result\u001b[39;00m\n\u001b[32m    102\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(return_result, \u001b[38;5;167;01mBaseException\u001b[39;00m):\n\u001b[32m--> \u001b[39m\u001b[32m103\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m return_result\n\u001b[32m    104\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    105\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m return_result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/fsspec/asyn.py:56\u001b[39m, in \u001b[36m_runner\u001b[39m\u001b[34m(event, coro, result, timeout)\u001b[39m\n\u001b[32m     54\u001b[39m     coro = asyncio.wait_for(coro, timeout=timeout)\n\u001b[32m     55\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m56\u001b[39m     result[\u001b[32m0\u001b[39m] = \u001b[38;5;28;01mawait\u001b[39;00m coro\n\u001b[32m     57\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\u001b[32m     58\u001b[39m     result[\u001b[32m0\u001b[39m] = ex\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/s3fs/core.py:834\u001b[39m, in \u001b[36mS3FileSystem._glob\u001b[39m\u001b[34m(self, path, **kwargs)\u001b[39m\n\u001b[32m    832\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m path.startswith(\u001b[33m\"\u001b[39m\u001b[33m*\u001b[39m\u001b[33m\"\u001b[39m):\n\u001b[32m    833\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[33m\"\u001b[39m\u001b[33mCannot traverse all of S3\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m--> \u001b[39m\u001b[32m834\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28msuper\u001b[39m()._glob(path, **kwargs)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/fsspec/asyn.py:807\u001b[39m, in \u001b[36mAsyncFileSystem._glob\u001b[39m\u001b[34m(self, path, maxdepth, **kwargs)\u001b[39m\n\u001b[32m    804\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    805\u001b[39m         depth = \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m807\u001b[39m allpaths = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._find(\n\u001b[32m    808\u001b[39m     root, maxdepth=depth, withdirs=\u001b[38;5;28;01mTrue\u001b[39;00m, detail=\u001b[38;5;28;01mTrue\u001b[39;00m, **kwargs\n\u001b[32m    809\u001b[39m )\n\u001b[32m    811\u001b[39m pattern = glob_translate(path + (\u001b[33m\"\u001b[39m\u001b[33m/\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m ends_with_sep \u001b[38;5;28;01melse\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33m\"\u001b[39m))\n\u001b[32m    812\u001b[39m pattern = re.compile(pattern)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/s3fs/core.py:864\u001b[39m, in \u001b[36mS3FileSystem._find\u001b[39m\u001b[34m(self, path, maxdepth, withdirs, detail, prefix, **kwargs)\u001b[39m\n\u001b[32m    860\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[32m    861\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mCan not specify \u001b[39m\u001b[33m'\u001b[39m\u001b[33mprefix\u001b[39m\u001b[33m'\u001b[39m\u001b[33m option alongside \u001b[39m\u001b[33m'\u001b[39m\u001b[33mwithdirs\u001b[39m\u001b[33m'\u001b[39m\u001b[33m/\u001b[39m\u001b[33m'\u001b[39m\u001b[33mmaxdepth\u001b[39m\u001b[33m'\u001b[39m\u001b[33m options.\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    862\u001b[39m     )\n\u001b[32m    863\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m maxdepth:\n\u001b[32m--> \u001b[39m\u001b[32m864\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28msuper\u001b[39m()._find(\n\u001b[32m    865\u001b[39m         bucket + \u001b[33m\"\u001b[39m\u001b[33m/\u001b[39m\u001b[33m\"\u001b[39m + key,\n\u001b[32m    866\u001b[39m         maxdepth=maxdepth,\n\u001b[32m    867\u001b[39m         withdirs=withdirs,\n\u001b[32m    868\u001b[39m         detail=detail,\n\u001b[32m    869\u001b[39m         **kwargs,\n\u001b[32m    870\u001b[39m     )\n\u001b[32m    871\u001b[39m \u001b[38;5;66;03m# TODO: implement find from dircache, if all listings are present\u001b[39;00m\n\u001b[32m    872\u001b[39m \u001b[38;5;66;03m# if refresh is False:\u001b[39;00m\n\u001b[32m    873\u001b[39m \u001b[38;5;66;03m#     out = incomplete_tree_dirs(self.dircache, path)\u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m    878\u001b[39m \u001b[38;5;66;03m#         return super().find(path)\u001b[39;00m\n\u001b[32m    879\u001b[39m \u001b[38;5;66;03m#     # else: we refresh anyway, having at least two missing trees\u001b[39;00m\n\u001b[32m    880\u001b[39m out = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._lsdir(path, delimiter=\u001b[33m\"\u001b[39m\u001b[33m\"\u001b[39m, prefix=prefix, **kwargs)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/fsspec/asyn.py:847\u001b[39m, in \u001b[36mAsyncFileSystem._find\u001b[39m\u001b[34m(self, path, maxdepth, withdirs, **kwargs)\u001b[39m\n\u001b[32m    843\u001b[39m detail = kwargs.pop(\u001b[33m\"\u001b[39m\u001b[33mdetail\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[32m    845\u001b[39m \u001b[38;5;66;03m# Add the root directory if withdirs is requested\u001b[39;00m\n\u001b[32m    846\u001b[39m \u001b[38;5;66;03m# This is needed for posix glob compliance\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m847\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m withdirs \u001b[38;5;129;01mand\u001b[39;00m path != \u001b[33m\"\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._isdir(path):\n\u001b[32m    848\u001b[39m     out[path] = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._info(path)\n\u001b[32m    850\u001b[39m \u001b[38;5;66;03m# async for?\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/s3fs/core.py:1554\u001b[39m, in \u001b[36mS3FileSystem._isdir\u001b[39m\u001b[34m(self, path)\u001b[39m\n\u001b[32m   1552\u001b[39m \u001b[38;5;66;03m# This only returns things within the path and NOT the path object itself\u001b[39;00m\n\u001b[32m   1553\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m1554\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mbool\u001b[39m(\u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._lsdir(path))\n\u001b[32m   1555\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mFileNotFoundError\u001b[39;00m:\n\u001b[32m   1556\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/s3fs/core.py:768\u001b[39m, in \u001b[36mS3FileSystem._lsdir\u001b[39m\u001b[34m(self, path, refresh, max_items, delimiter, prefix, versions)\u001b[39m\n\u001b[32m    766\u001b[39m     files += dirs\n\u001b[32m    767\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m ClientError \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[32m--> \u001b[39m\u001b[32m768\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m translate_boto_error(e)\n\u001b[32m    770\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m delimiter \u001b[38;5;129;01mand\u001b[39;00m files \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m versions:\n\u001b[32m    771\u001b[39m     \u001b[38;5;28mself\u001b[39m.dircache[path] = files\n\n\u001b[31mPermissionError\u001b[39m: Access Denied","ename":"PermissionError","evalue":"Access Denied"}],"key":"akLObinQ6v"}],"key":"HiRqpz93uq"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We now have a list of files we can read in!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SUJfLAsiTj"}],"key":"PquSc7Qh2E"}],"key":"seh3ftgxFv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read the Data into PyART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dke8BrCPz1"}],"identifier":"read-the-data-into-pyart","label":"Read the Data into PyART","html_id":"read-the-data-into-pyart","implicit":true,"key":"cZPNAqYMpR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When reading into PyART, we can use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vMgzLaiLCK"},{"type":"inlineCode","value":"pyart.io.read_nexrad_archive","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"t00O2ORClw"},{"type":"text","value":" or ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eP62s7uB9O"},{"type":"inlineCode","value":"pyart.io.read","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OfBtMvySOD"},{"type":"text","value":" module to read in our data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KkwesarPXF"}],"key":"eB6FMDPkdP"}],"key":"eAaR0SXrHj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"radar = pyart.io.read_nexrad_archive(f's3://{files[3]}')","key":"VVrdCN351g"},{"type":"output","id":"tQ5P8-taPlmUSf1UKwZ_k","data":[],"key":"xq3oz6DUF8"}],"key":"Y7ehozVCXf"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice how for the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NJLAvrH0Ck"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"NEXRAD Level 2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hCL6Q1WiIb"}],"key":"LHEDRPxYgq"},{"type":"text","value":" data, we have several fields available","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LK2kJzaBHU"}],"key":"pR6KgoeO98"}],"key":"vNJVh1WwJM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"list(radar.fields)","key":"kh4nLYYo9M"},{"type":"output","id":"fBbej8AxFoL7htCgDvv2w","data":[],"key":"qI8oujHryn"}],"key":"xrEHI7Aund"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot a quick-look of the dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XKoHko8KWk"}],"identifier":"plot-a-quick-look-of-the-dataset","label":"Plot a quick-look of the dataset","html_id":"plot-a-quick-look-of-the-dataset","implicit":true,"key":"zw3RMrMDaG"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s get a quicklook of the reflectivity and velocity fields","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wSHwR2Ifi1"}],"key":"QAQInBveaH"}],"key":"NeuEnGYy1H"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarMapDisplay(radar)\ndisplay.plot_ppi_map('reflectivity',\n                     sweep=3,\n                     vmin=-20,\n                     vmax=60,\n                     projection=ccrs.PlateCarree()\n                    )","key":"UZhPWoZ6HQ"},{"type":"output","id":"juh_wLFy7K3artCb3VOJf","data":[],"key":"LiMuAdnQwL"}],"key":"vepurgmuN9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi_map('velocity',\n                     sweep=3,\n                     projection=ccrs.PlateCarree(),\n                    )","key":"w32JOeBie9"},{"type":"output","id":"ZRadoPnTrL6v7pijtqQ24","data":[],"key":"CujdQcpO3s"}],"key":"aBXiLrdeST"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How to customize your plots and maps","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"waJRb3mril"}],"identifier":"how-to-customize-your-plots-and-maps","label":"How to customize your plots and maps","html_id":"how-to-customize-your-plots-and-maps","implicit":true,"key":"p0LzO3Tg4M"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s add some more features to our map, and zoom in on our main storm","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JxTRUM9WnX"}],"key":"PpjufwMVOA"}],"key":"DMljSZSPF2"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Combine into a single figure","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EKJsixmkmu"}],"identifier":"combine-into-a-single-figure","label":"Combine into a single figure","html_id":"combine-into-a-single-figure","implicit":true,"key":"bGbfbdbGNd"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s start first by combining into a single figure, and zooming in a bit on our main domain.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"q07Hhgy1kb"}],"key":"cJnUW0UpAz"}],"key":"TFpFwit91n"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create our figure\nfig = plt.figure(figsize=[12, 4])\n\n# Setup our first axis with reflectivity\nax1 = plt.subplot(121, projection=ccrs.PlateCarree())\ndisplay = pyart.graph.RadarMapDisplay(radar)\ndisplay.plot_ppi_map('reflectivity',\n                     sweep=3,\n                     vmin=-20,\n                     vmax=60,\n                     ax=ax1,)\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-99, -96)\nplt.ylim(33.5, 36.5)\n\n# Setup our second axis for velocity\nax2 = plt.subplot(122, projection=ccrs.PlateCarree())\ndisplay.plot_ppi_map('velocity',\n                     sweep=3,\n                     vmin=-40,\n                     vmax=40,\n                     projection=ccrs.PlateCarree(),\n                     ax=ax2,)\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-99, -96)\nplt.ylim(33.5, 36.5)\nplt.show()","key":"FKIrV1Ysu3"},{"type":"output","id":"0zIsVe51P9RMVnge-SaVq","data":[],"key":"DWx8TB7ecL"}],"key":"sCOEADTcwU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add Counties","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CKroxPL5x9"}],"identifier":"add-counties","label":"Add Counties","html_id":"add-counties","implicit":true,"key":"x7bijYxsoD"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can add counties onto our map by using the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SinbY23DJ0"},{"type":"inlineCode","value":"USCOUNTIES","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EsNZVpiYVR"},{"type":"text","value":" module from ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Z2ZQRCSe1m"},{"type":"inlineCode","value":"metpy.plots","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EHGPO0zQxb"}],"key":"ZChy47IfaW"}],"key":"u1DoKZe4Vb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create our figure\nfig = plt.figure(figsize=[12, 4])\n\n# Setup our first axis with reflectivity\nax1 = plt.subplot(121, projection=ccrs.PlateCarree())\ndisplay = pyart.graph.RadarMapDisplay(radar)\ndisplay.plot_ppi_map('reflectivity',\n                     sweep=3,\n                     vmin=-20,\n                     vmax=60,\n                     ax=ax1,)\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-99, -96)\nplt.ylim(33.5, 36.5)\n\n# Add counties\nax1.add_feature(USCOUNTIES,\n                linewidth=0.5)\n\n# Setup our second axis for velocity\nax2 = plt.subplot(122, projection=ccrs.PlateCarree())\ndisplay.plot_ppi_map('velocity',\n                     sweep=3,\n                     vmin=-40,\n                     vmax=40,\n                     projection=ccrs.PlateCarree(),\n                     ax=ax2,)\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-99, -96)\nplt.ylim(33.5, 36.5)\n\n# Add counties\nax2.add_feature(USCOUNTIES,\n                linewidth=0.5)\n\nplt.show()","key":"lgZa9Kzgtb"},{"type":"output","id":"aSSVgPNJW5iYJHUgyXeeL","data":[],"key":"Oc1OobPVGQ"}],"key":"BQNVvkQkMU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Zoom in even more","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MZZDOAAnNd"}],"identifier":"zoom-in-even-more","label":"Zoom in even more","html_id":"zoom-in-even-more","implicit":true,"key":"aJcQxMisiP"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s zoom in even more to our main feature - it looks like there is velocity couplet (where high positive and negative values of velcocity are close to one another, indicating rotation), near the center of our map.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UzbOxhtkAX"}],"key":"sFbl59SnSP"}],"key":"jTgoJBfZcR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create our figure\nfig = plt.figure(figsize=[12, 4])\n\n# Setup our first axis with reflectivity\nax1 = plt.subplot(121, projection=ccrs.PlateCarree())\ndisplay = pyart.graph.RadarMapDisplay(radar)\ndisplay.plot_ppi_map('reflectivity',\n                     sweep=3,\n                     vmin=-20,\n                     vmax=60,\n                     ax=ax1,)\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-98, -97)\nplt.ylim(35, 36)\n\n# Add counties\nax1.add_feature(USCOUNTIES,\n                linewidth=0.5)\n\n# Setup our second axis for velocity\nax2 = plt.subplot(122, projection=ccrs.PlateCarree())\ndisplay.plot_ppi_map('velocity',\n                     sweep=3,\n                     vmin=-40,\n                     vmax=40,\n                     projection=ccrs.PlateCarree(),\n                     ax=ax2,)\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-98, -97)\nplt.ylim(35, 36)\n\n# Add counties\nax2.add_feature(USCOUNTIES,\n                linewidth=0.5)\n\nplt.show()","key":"IDazlUoCN8"},{"type":"output","id":"zEHiXUiY_ikVieQ4Jy4AG","data":[],"key":"RJLbvXbaiC"}],"key":"iVBgUx4va6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Customize our Labels and Add Finer Grid Labels","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LK9vvt06jO"}],"identifier":"customize-our-labels-and-add-finer-grid-labels","label":"Customize our Labels and Add Finer Grid Labels","html_id":"customize-our-labels-and-add-finer-grid-labels","implicit":true,"key":"lcaetYPMxi"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"You’ll notice, by default, our colorbar label for the velocity field on the right extends across our entire figure, and the latitude/longitude labels on our axes are now gone. Let’s fix that!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"uJuIRCWQSP"}],"key":"ofZeu8Gaak"}],"key":"OrsNuxBEnN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create our figure\nfig = plt.figure(figsize=[12, 4])\n\n# Setup our first axis with reflectivity\nax1 = plt.subplot(121, projection=ccrs.PlateCarree())\ndisplay = pyart.graph.RadarMapDisplay(radar)\nref_map = display.plot_ppi_map('reflectivity',\n                               sweep=3,\n                               vmin=-20,\n                               vmax=60,\n                               ax=ax1,\n                               colorbar_label='Equivalent Relectivity ($Z_{e}$) (dBZ)')\n\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-97.7, -97.1)\nplt.ylim(35.2, 35.8)\n\n# Add gridlines\ngl = ax1.gridlines(crs=ccrs.PlateCarree(),\n                  draw_labels=True,\n                  linewidth=1, \n                  color='gray', \n                  alpha=0.3,\n                  linestyle='--')\n\n# Make sure labels are only plotted on the left and bottom\ngl.xlabels_top = False\ngl.ylabels_right = False\n\n# Increase the fontsize of our gridline labels\ngl.xlabel_style = {'fontsize':10}\ngl.ylabel_style = {'fontsize':10}\n\n# Add counties\nax1.add_feature(USCOUNTIES,\n                linewidth=0.5)\n\n# Setup our second axis for velocity\nax2 = plt.subplot(122, projection=ccrs.PlateCarree())\nvel_plot = display.plot_ppi_map('velocity',\n                                sweep=3,\n                                vmin=-40,\n                                vmax=40,\n                                projection=ccrs.PlateCarree(),\n                                ax=ax2,\n                                colorbar_label='Radial Velocity (m/s)')\n\n# Zoom in by setting the xlim/ylim\nplt.xlim(-97.7, -97.1)\nplt.ylim(35.2, 35.8)\n\n# Add gridlines\ngl = ax2.gridlines(crs=ccrs.PlateCarree(),\n                   draw_labels=True,\n                   linewidth=1, \n                   color='gray', \n                   alpha=0.3,\n                   linestyle='--')\n\n# Make sure labels are only plotted on the left and bottom\ngl.xlabels_top = False\ngl.ylabels_right = False\n\n# Increase the fontsize of our gridline labels\ngl.xlabel_style = {'fontsize':10}\ngl.ylabel_style = {'fontsize':10}\n\n# Add counties\nax2.add_feature(USCOUNTIES,\n                linewidth=0.5)\nplt.show()","key":"y8QVwHMfhi"},{"type":"output","id":"3pR454ZWvVfPzW3R_8b44","data":[],"key":"S8Uy1rullN"}],"key":"nJ7u6RFNRG"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zypDjEpgaz"},{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kUvFGZ2AUE"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"vmpcDSyw92"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this example, we walked through how to use MetPy and PyART to read in NEXRAD Level 2 data from the Moore Oklahoma tornado in 2013, create some quick looks, and customize the plots to analyze the tornadic supercell closest to the radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VdJYIzgARh"}],"key":"zxy8bdas13"},{"type":"heading","depth":3,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"What’s next?","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"S031lmlEDl"}],"identifier":"whats-next","label":"What’s next?","html_id":"whats-next","implicit":true,"key":"UOGTZs4Ex9"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Other examples will look at additional data sources and radar types, including data from the Department of Energy (DOE) Atmospheric Radiation Measurement (","key":"UzvhSFCKtZ"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"wBC6o75711"}],"key":"xC4QXjHmLy"},{"type":"text","value":") Facility, and work through more advanced workflows such as completing a dual-Doppler analysis.","key":"cdBPtgx1dc"}],"key":"ocWkFfEynh"}],"key":"WVRZKdB82S"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and References","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OfPkvGi5ia"}],"identifier":"resources-and-references","label":"Resources and References","html_id":"resources-and-references","implicit":true,"key":"ejBtfOIeDV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://registry.opendata.aws/noaa-nexrad/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"NEXRAD Data on AWS","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UqiFLjVPgo"}],"urlSource":"https://registry.opendata.aws/noaa-nexrad/","key":"kegeZwgIAr"}],"key":"bIVK16z0wy"}],"key":"uUl9Rf18v2"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://arm-doe.github.io/pyart/examples/io/plot_nexrad_data_aws.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Py-ART NEXRAD Data Example","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"odfASkXc8P"}],"urlSource":"https://arm-doe.github.io/pyart/examples/io/plot_nexrad_data_aws.html","key":"F5coxx2Dq2"}],"key":"n60C9C6kJY"}],"key":"hEGrzfJvyR"}],"key":"n5hItEiGFb"}],"key":"Dr1BrsMxQV"}],"key":"auinK6Ry5o"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Interactive Radar Visualization","url":"/notebooks/foundations/interactive-radar-visualization","group":"Radar Software Foundations"},"next":{"title":"Plotting Data from a Field Campaign (TRACER)","url":"/notebooks/example-workflows/tracer-example","group":"Example Workflows"}}},"domain":"http://localhost:3000"}