{"version":2,"kind":"Notebook","sha256":"b76f75154afef00cdb8ab36a7ac551221ea1d372f936304b2019fccaa05f2536","slug":"notebooks.example-workflows.cacti-data-quality-example","location":"/notebooks/example-workflows/cacti-data-quality-example.ipynb","dependencies":[],"frontmatter":{"title":"Data Quality Check from the CACTI Field Campaign","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Max Grover","given":"Max","family":"Grover"},"name":"Max Grover","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Zachary Sherman","given":"Zachary","family":"Sherman"},"name":"Zachary Sherman","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Milind Sharma","given":"Milind","family":"Sharma"},"name":"Milind Sharma","id":"contributors-myst-generated-uid-2"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/radar-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"abbreviations":{"ARM":"Atmospheric Radiation Measurement"},"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/radar-cookbook/blob/main/notebooks/example-workflows/cacti-data-quality-example.ipynb","thumbnail":"/radar-cookbook/build/phidp_kdp_comparison-5012b05c22c161f61cfe6888167a1a89.png","exports":[{"format":"ipynb","filename":"cacti-data-quality-example.ipynb","url":"/radar-cookbook/build/cacti-data-quality-e-ba953bb2a698db6bc676b18ebc7b0a9d.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/radar-cookbook/build/phidp_kdp_comparison-5012b05c22c161f61cfe6888167a1a89.png","alt":"Dual-Pol Comparison","width":700,"key":"ndi0aCAOe0","urlSource":"../images/phidp_kdp_comparison_cacti.png"}],"key":"cmYdYUTNA0"}],"key":"P1nbrdfPkX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data Quality Check from the CACTI Field Campaign","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZzWdO6iThO"}],"identifier":"data-quality-check-from-the-cacti-field-campaign","label":"Data Quality Check from the CACTI Field Campaign","html_id":"data-quality-check-from-the-cacti-field-campaign","implicit":true,"key":"K4IQ8F7NEZ"}],"key":"BPPhsJdoJw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RT7pXrYXdX"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"LlyVCJgMap"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SW5O7HTmg8"}],"key":"Z5tautdAzz"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"How to access multiple datasets from the Atmospheric Radiation Measurment (","key":"NNJCvykdjR"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"HOulhiG78B"}],"key":"GW9acM2JDz"},{"type":"text","value":") user facility","key":"bTefBsQspc"}],"key":"Ob4cxdbrKU"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"How to create a multipanel plot","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"XjgDkvQHpj"}],"key":"u8IHwqOiMh"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"How to compare uncorrected vs. corrected data","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rFWiiMSIdb"}],"key":"C6JcVpXKCz"}],"key":"XUfTGVvED4"}],"key":"hDaoMO5G1K"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d1ZC5stjp9"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"GKkJ7V07EE"},{"type":"table","position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Y15Pai2VvF"}],"key":"ePzzgbuftq"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WRMI85ztLQ"}],"key":"iODlkr79uH"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eXM7Ryjuyw"}],"key":"uqtnQYorMq"}],"key":"zLDwUOikHG"},{"type":"tableRow","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Matplotlib Basics","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OMamnkvwsT"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","key":"MkBSJqA1jh"}],"key":"b0eA6USILL"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"c6nBbdM0G4"}],"key":"NAtJTiddiV"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Basic plotting","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"euXu92SJ1q"}],"key":"ucYWQZrAoI"}],"key":"RcSMPaJK5t"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Introduction to Cartopy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"SLUYFyEK9Z"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"fJ3buXoQju"}],"key":"s7VQrvKiws"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vUfJM4O19O"}],"key":"U7mfuQp7qo"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Adding projections to your plot","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pqtgKUtBtw"}],"key":"KMNeTgpE13"}],"key":"vDNVzLw8lg"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"/notebooks/foundations/pyart-basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Py-ART Basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pOrjr1kDIK"}],"urlSource":"../foundations/pyart-basics","dataUrl":"/notebooks.foundations.pyart-basics.json","internal":true,"protocol":"file","key":"ZnICjP6IcP"}],"key":"SJqCp8pIyK"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"iZ5B9Cq91S"}],"key":"cM8TJkDzxJ"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"IO/Visualization","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Yw7yydMPcE"}],"key":"aJRYLsnJ4m"}],"key":"Qrq7yhniJ2"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"/notebooks/foundations/pyart-corrections","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Py-ART Corrections","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"P3rw6tmLvf"}],"urlSource":"../foundations/pyart-corrections","dataUrl":"/notebooks.foundations.pyart-corrections.json","internal":true,"protocol":"file","key":"k6nNd0vZA5"}],"key":"UrKb384wSd"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jwhn5hAmmz"}],"key":"Nb3arAMXxU"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Radar Corrections","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"MQRvEzV5l8"}],"key":"skDe7X9q6u"}],"key":"FJCL0jsnmN"}],"key":"pkSmUfnjrZ"},{"type":"thematicBreak","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"StfLSSAnPq"}],"key":"C0R5XtBWGv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CbXPIWmaEP"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"EQmL0K2NoE"}],"key":"tibA7Bd9GP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import os\n\nimport act\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport cartopy.crs as ccrs\nimport pyart\nimport glob","key":"cYXPQWjVcS"},{"type":"output","id":"ZfLkmz7P1mMmHAKkL6sPf","data":[{"output_type":"stream","name":"stdout","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"iunmD0gffG"}],"key":"uRkdNxZHeI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Grab Data from the ","key":"aoaFveHGOi"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"VMd3yZBk9w"}],"key":"UAxAZwDVzb"},{"type":"text","value":" Data Portal","key":"DEtj0yn2Li"}],"identifier":"grab-data-from-the-arm-data-portal","label":"Grab Data from the ARM Data Portal","html_id":"grab-data-from-the-arm-data-portal","implicit":true,"key":"tmQZvoZaYW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"One of the better cases of the CACTI field campaign was from November 11, 2018, where several intense storms traversed through the domain.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SQSBRp3O6m"}],"key":"TVKcNnMSqo"},{"type":"heading","depth":3,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The Cloud, Aerosol, and Complex Terrain Interactions (CACTI) Field Campaign","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"C5fPM4NZyH"}],"identifier":"the-cloud-aerosol-and-complex-terrain-interactions-cacti-field-campaign","label":"The Cloud, Aerosol, and Complex Terrain Interactions (CACTI) Field Campaign","html_id":"the-cloud-aerosol-and-complex-terrain-interactions-cacti-field-campaign","implicit":true,"key":"au99wwrafA"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Data is available from the Atmospheric Radiation Measurment user facility, which helped to lead the CACTI field campaign in the Sierras de Cordoba region of Argentina.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"PqpK7wx4Nl"}],"key":"wKqf6MdVoy"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The data are available from the ","key":"g27w0Wm4KV"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"okGDheyaPc"}],"key":"bakcx2lUu5"},{"type":"text","value":" data portal (","key":"AUnQO7EDOT"},{"type":"link","url":"https://adc.arm.gov/","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"https://​adc​.arm​.gov/","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"D9PBnPIn9O"}],"urlSource":"https://adc.arm.gov/","key":"uYSAyqyMYE"},{"type":"text","value":").","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"AryxGbb2J7"}],"key":"yngpEbyhNJ"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"We are interested in the corrected C-band radar data, which has the original and corrected data, with the datastream name","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"tLt7KzT0dN"}],"key":"bwpa4yLYQ4"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"inlineCode","value":"corcsapr2cmacppiM1.c1","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"r8c4zWIxzE"}],"key":"VRrCQ07tYQ"}],"key":"VoiAkEr8oq"}],"key":"J1SsP6Acy8"}],"key":"Or1gUL6af0"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the ","key":"j1vCV8KXxx"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"XWhzqEAFWJ"}],"key":"KJIKmTCFbC"},{"type":"text","value":" Live API to Download the Data, using ACT","key":"vqmtKtoDW4"}],"identifier":"use-the-arm-live-api-to-download-the-data-using-act","label":"Use the ARM Live API to Download the Data, using ACT","html_id":"use-the-arm-live-api-to-download-the-data-using-act","implicit":true,"key":"fKu2gV0Vyp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Atmospheric Data Community Toolkit (ACT) has a helpful module to interface with the data server:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HAlOz2isoN"}],"key":"kM3Hi4m4KA"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/ACT/API/generated/act.discovery.download_arm_data.html","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Download Data API","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pgCR4TsQjm"}],"urlSource":"https://arm-doe.github.io/ACT/API/generated/act.discovery.download_arm_data.html","key":"iIHadFdswa"}],"key":"aaJ3VwHC4i"}],"key":"awPanlycVn"}],"key":"WLrjfSdK5J"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setup our Download Query","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"shLuQAq1bR"}],"identifier":"setup-our-download-query","label":"Setup our Download Query","html_id":"setup-our-download-query","implicit":true,"key":"SBbIXOMYGA"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Before downloading our data, we need to make sure we have an ","key":"lfYJKn0GoP"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"J5WIEn4qiB"}],"key":"FPU2cOCjez"},{"type":"text","value":" Data Account, and ","key":"bHWnjo5KLA"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"wx2adia1ye"}],"key":"DTE1vzsBSL"},{"type":"text","value":" Live token. Both of these can be found using this link:","key":"kTXkwZxvtw"}],"key":"A4iRdVNPUG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://adc.arm.gov/armlive/livedata/home","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ARM Live Signup","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hDHBbtWBfY"}],"urlSource":"https://adc.arm.gov/armlive/livedata/home","key":"sQrqFzfaGj"}],"key":"qGAzqK6xRD"}],"key":"GFdGgizLM3"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Once you sign up, you will see your token. Copy and replace that where we have ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eIGOe0CZvg"},{"type":"inlineCode","value":"arm_username","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"w3SeUl7tnK"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BJUDJhD6iI"},{"type":"inlineCode","value":"arm_password","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fnQ3E1lY4x"},{"type":"text","value":" below.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VO8nE2jH4s"}],"key":"Zn6oYYNc9U"}],"key":"ubkOkJEd4s"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"arm_username = os.getenv(\"ARM_USERNAME\")\narm_password = os.getenv(\"ARM_PASSWORD\")\n\ndatastream = \"corcsapr2cmacppiM1.c1\"\n\nstart_date = \"2018-11-11T03:00:00\"\nend_date = \"2018-11-11T03:15:00\"","key":"YhQ6QrsKoF"},{"type":"output","id":"3LyvHJcncvMhuE_jInC6A","data":[],"key":"pc5A7XwBGL"}],"key":"VDTxV1B8qY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"csapr_files = act.discovery.download_arm_data(arm_username,\n                                          arm_password,\n                                          datastream,\n                                          start_date,\n                                          end_date,\n                                         )","key":"gaptir6kgS"},{"type":"output","id":"f2rqGxjIeM9Vf2OHepwre","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mHTTPError\u001b[39m                                 Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[3]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m csapr_files = \u001b[43mact\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdiscovery\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdownload_arm_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43marm_username\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m      2\u001b[39m \u001b[43m                                          \u001b[49m\u001b[43marm_password\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m      3\u001b[39m \u001b[43m                                          \u001b[49m\u001b[43mdatastream\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m      4\u001b[39m \u001b[43m                                          \u001b[49m\u001b[43mstart_date\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m      5\u001b[39m \u001b[43m                                          \u001b[49m\u001b[43mend_date\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m      6\u001b[39m \u001b[43m                                         \u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/site-packages/act/discovery/arm.py:120\u001b[39m, in \u001b[36mdownload_arm_data\u001b[39m\u001b[34m(username, token, datastream, startdate, enddate, time, output)\u001b[39m\n\u001b[32m    117\u001b[39m req = Request(query_url, \u001b[38;5;28;01mNone\u001b[39;00m, headers)\n\u001b[32m    118\u001b[39m \u001b[38;5;66;03m# get url response, read the body of the message,\u001b[39;00m\n\u001b[32m    119\u001b[39m \u001b[38;5;66;03m# and decode from bytes type to utf-8 string\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m120\u001b[39m response_body = \u001b[43murlopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43mreq\u001b[49m\u001b[43m)\u001b[49m.read().decode(\u001b[33m'\u001b[39m\u001b[33mutf-8\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m    121\u001b[39m \u001b[38;5;66;03m# if the response is an html doc, then there was an error with the user\u001b[39;00m\n\u001b[32m    122\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m response_body[\u001b[32m1\u001b[39m:\u001b[32m14\u001b[39m] == \u001b[33m'\u001b[39m\u001b[33m!DOCTYPE html\u001b[39m\u001b[33m'\u001b[39m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/urllib/request.py:215\u001b[39m, in \u001b[36murlopen\u001b[39m\u001b[34m(url, data, timeout, cafile, capath, cadefault, context)\u001b[39m\n\u001b[32m    213\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    214\u001b[39m     opener = _opener\n\u001b[32m--> \u001b[39m\u001b[32m215\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mopener\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43murl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtimeout\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/urllib/request.py:521\u001b[39m, in \u001b[36mOpenerDirector.open\u001b[39m\u001b[34m(self, fullurl, data, timeout)\u001b[39m\n\u001b[32m    519\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m processor \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m.process_response.get(protocol, []):\n\u001b[32m    520\u001b[39m     meth = \u001b[38;5;28mgetattr\u001b[39m(processor, meth_name)\n\u001b[32m--> \u001b[39m\u001b[32m521\u001b[39m     response = \u001b[43mmeth\u001b[49m\u001b[43m(\u001b[49m\u001b[43mreq\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    523\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m response\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/urllib/request.py:630\u001b[39m, in \u001b[36mHTTPErrorProcessor.http_response\u001b[39m\u001b[34m(self, request, response)\u001b[39m\n\u001b[32m    627\u001b[39m \u001b[38;5;66;03m# According to RFC 2616, \"2xx\" code indicates that the client's\u001b[39;00m\n\u001b[32m    628\u001b[39m \u001b[38;5;66;03m# request was successfully received, understood, and accepted.\u001b[39;00m\n\u001b[32m    629\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[32m200\u001b[39m <= code < \u001b[32m300\u001b[39m):\n\u001b[32m--> \u001b[39m\u001b[32m630\u001b[39m     response = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mparent\u001b[49m\u001b[43m.\u001b[49m\u001b[43merror\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    631\u001b[39m \u001b[43m        \u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mhttp\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrequest\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmsg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhdrs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    633\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m response\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/urllib/request.py:559\u001b[39m, in \u001b[36mOpenerDirector.error\u001b[39m\u001b[34m(self, proto, *args)\u001b[39m\n\u001b[32m    557\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m http_err:\n\u001b[32m    558\u001b[39m     args = (\u001b[38;5;28mdict\u001b[39m, \u001b[33m'\u001b[39m\u001b[33mdefault\u001b[39m\u001b[33m'\u001b[39m, \u001b[33m'\u001b[39m\u001b[33mhttp_error_default\u001b[39m\u001b[33m'\u001b[39m) + orig_args\n\u001b[32m--> \u001b[39m\u001b[32m559\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_call_chain\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/urllib/request.py:492\u001b[39m, in \u001b[36mOpenerDirector._call_chain\u001b[39m\u001b[34m(self, chain, kind, meth_name, *args)\u001b[39m\n\u001b[32m    490\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m handler \u001b[38;5;129;01min\u001b[39;00m handlers:\n\u001b[32m    491\u001b[39m     func = \u001b[38;5;28mgetattr\u001b[39m(handler, meth_name)\n\u001b[32m--> \u001b[39m\u001b[32m492\u001b[39m     result = \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    493\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m result \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    494\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/radar-cookbook-dev/lib/python3.12/urllib/request.py:639\u001b[39m, in \u001b[36mHTTPDefaultErrorHandler.http_error_default\u001b[39m\u001b[34m(self, req, fp, code, msg, hdrs)\u001b[39m\n\u001b[32m    638\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mhttp_error_default\u001b[39m(\u001b[38;5;28mself\u001b[39m, req, fp, code, msg, hdrs):\n\u001b[32m--> \u001b[39m\u001b[32m639\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m HTTPError(req.full_url, code, msg, hdrs, fp)\n\n\u001b[31mHTTPError\u001b[39m: HTTP Error 500: ","ename":"HTTPError","evalue":"HTTP Error 500: "}],"key":"arEW8y9IFq"}],"key":"eKWbqDe2tt"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in and Investigate our Radar Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h1CMHKCrUJ"}],"identifier":"read-in-and-investigate-our-radar-data","label":"Read in and Investigate our Radar Data","html_id":"read-in-and-investigate-our-radar-data","implicit":true,"key":"qoeDTewAUb"}],"key":"tTL6mXHKOe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"radar = pyart.io.read(csapr_files[0])","key":"xOQVorcPiP"},{"type":"output","id":"0xI22UcbdfsKyn3oVZBwt","data":[],"key":"fo0ISJzTE1"}],"key":"vB2e8z2WlQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"List the available fields and plot the corrected and uncorrected data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VHFwb5W7WS"}],"identifier":"list-the-available-fields-and-plot-the-corrected-and-uncorrected-data","label":"List the available fields and plot the corrected and uncorrected data","html_id":"list-the-available-fields-and-plot-the-corrected-and-uncorrected-data","implicit":true,"key":"jl8j3TScdF"}],"key":"ZaRQU3XA8R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"sorted(list(radar.fields))","key":"l482nUwcG3"},{"type":"output","id":"GV0r_I0D_eNTIJ1CeWQgy","data":[],"key":"bGSQRysz5z"}],"key":"f1JG4gg8pg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot a Quick-Look of Reflectivity and Velocity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nJ7dvI5frA"}],"identifier":"plot-a-quick-look-of-reflectivity-and-velocity","label":"Plot a Quick-Look of Reflectivity and Velocity","html_id":"plot-a-quick-look-of-reflectivity-and-velocity","implicit":true,"key":"F32dT443t9"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s start by plotting our reflectivity and velocity fields, using a four panel plot showing the uncorrected and corrected fields. Notice how the data is masked, and the radial velocities are unfolded.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"lh5nRSTA5u"}],"key":"VRLRbNkMqp"}],"key":"Y3o7fQ8k13"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12,10))\ndisplay = pyart.graph.RadarDisplay(radar)\nax1 = plt.subplot(221)\ndisplay.plot_ppi(\"reflectivity\", ax=ax1)\n\nax2 = plt.subplot(222)\ndisplay.plot_ppi(\"corrected_reflectivity\", ax=ax2)\n\nax3 = plt.subplot(223)\ndisplay.plot_ppi(\"mean_doppler_velocity\", vmin=-30, vmax=30, cmap='balance', ax=ax3)\n\nax4 = plt.subplot(224)\ndisplay.plot_ppi(\"corrected_velocity\", vmin=-30, vmax=30, cmap='balance', ax=ax4)\n\nplt.tight_layout()","key":"GeQuumvG4q"},{"type":"output","id":"mZNlEoLwMH0B1O_WAZUr_","data":[],"key":"T4uSbT74PI"}],"key":"ucOi3iE0um"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Investigate Dual-Pol Variables","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RW21WJ9j71"}],"identifier":"investigate-dual-pol-variables","label":"Investigate Dual-Pol Variables","html_id":"investigate-dual-pol-variables","implicit":true,"key":"FTnYYr106k"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Several of the variables in this file are dual-polarization products, meaning it uses pulses in both the horizontal and vertical direction, and derives fields from this additional information.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"q7wEoo3sId"}],"key":"HJpL2xux65"},{"type":"image","url":"/radar-cookbook/build/f452b2d29ee92aab969c9d893e6e8dba.gif","alt":"Dual pol idea","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HrrLCdLPlD","urlSource":"https://www.weather.gov/images/ffc/dualpol_radar.gif"},{"type":"heading","depth":3,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Differential Phase Shift (PhiDP) and Specific Differential Phase (KDP)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HeSjpc4E7U"}],"identifier":"differential-phase-shift-phidp-and-specific-differential-phase-kdp","label":"Differential Phase Shift (PhiDP) and Specific Differential Phase (KDP)","html_id":"differential-phase-shift-phidp-and-specific-differential-phase-kdp","implicit":true,"key":"r11J3DEY04"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"One of these dual-pol variables is called the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"DqITmySGku"},{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Differential Phase Shift (PhiDP)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"M0lk084GI8"}],"key":"nEcEsC1sF3"},{"type":"text","value":", which is the difference in 2-way attenuation for the horizontal and vertical radar pulses moving through some target. This gives us information about the shape and concentration of the features we are interested in! It is also used to calculate the specific differential phase (KDP), which is the gradient in PhiDP, where positive KDP values indicate greater phase shift in the horizontal. Higher values of KDP can indicate an increase in the size and concentration of rain drops.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ajZ08xGIjC"}],"key":"Q13BMoG6u9"}],"key":"rm42KWE5K9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare Uncorrected and Corrected PhiDP and KDP","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gIcGAodwYR"}],"identifier":"compare-uncorrected-and-corrected-phidp-and-kdp","label":"Compare Uncorrected and Corrected PhiDP and KDP","html_id":"compare-uncorrected-and-corrected-phidp-and-kdp","implicit":true,"key":"vZf8AgXRYm"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We start with the uncorrected fields, ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WhHEr9gGXC"},{"type":"inlineCode","value":"specific_differential_phase","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IjcTFnaFyk"},{"type":"text","value":" and ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bS63EsWXqn"},{"type":"inlineCode","value":"uncorrected_differential_phase","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"a9SoP5nZhS"},{"type":"text","value":", and compare to the corrected fields ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Lph4BSE5PT"},{"type":"inlineCode","value":"filtered_corrected_specific_diff_phase","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"P40fpXH90h"},{"type":"text","value":" and ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dMIWIjwXLt"},{"type":"inlineCode","value":"filtered_corrected_differential_phase","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"S2l4o9dq8B"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZWIE2CMbEu"}],"key":"rielUMzaiq"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Notice how much cleaner the corrected fields are, and how the noise has been filtered, leading a more analysis-ready dataset.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Uv2zNbkLIV"}],"key":"Y0nee9RsNS"}],"key":"S8mbdwam3J"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarMapDisplay(radar)\nfig = plt.figure(figsize=(18,10))\n\n# Extract the latitude and longitude of the radar and use it for the center of the map\nlat_center = round(radar.latitude['data'][0], 2)\nlon_center = round(radar.longitude['data'][0], 2)\n\n# Set the projection - in this case, we use a general PlateCarree projection\nprojection = ccrs.PlateCarree()\n\n# Determine the ticks\nlat_ticks = np.arange(lat_center-2, lat_center+2, .5)\nlon_ticks = np.arange(lon_center-2, lon_center+2, 1.5)\n\nax1 = plt.subplot(231, projection=projection)\ndisplay.plot_ppi_map(\"reflectivity\", 0, resolution='10m', ax=ax1, lat_lines=lat_ticks, lon_lines=lon_ticks)\n\n\nax3 = plt.subplot(232,projection=projection)\ndisplay.plot_ppi_map(\"differential_phase\", 0, resolution='10m', ax=ax3, vmin=0, vmax=360, lat_lines=lat_ticks, lon_lines=lon_ticks)\n\nax3 = plt.subplot(233,projection=projection)\ndisplay.plot_ppi_map(\"specific_differential_phase\", 0, resolution='10m', ax=ax3, vmin=-1, vmax=4, cmap='Carbone42', lat_lines=lat_ticks, lon_lines=lon_ticks)\n\nax4 = plt.subplot(234, projection=projection)\ndisplay.plot_ppi_map(\"corrected_reflectivity\", 0, resolution='10m', ax=ax4, lat_lines=lat_ticks, lon_lines=lon_ticks)\n\n\nax5 = plt.subplot(235, projection=projection)\ndisplay.plot_ppi_map(\"filtered_corrected_differential_phase\", 0, resolution='10m', ax=ax5, vmin=0, vmax=360, cmap='Wild25', lat_lines=lat_ticks, lon_lines=lon_ticks)\n\nax6 = plt.subplot(236,projection=projection)\ndisplay.plot_ppi_map(\"filtered_corrected_specific_diff_phase\", 0, resolution='10m', ax=ax6, vmin=0, vmax=4, cmap='Carbone42', lat_lines=lat_ticks, lon_lines=lon_ticks)\n\nplt.tight_layout()\nplt.savefig('phidp_kdp_comparison_cacti.png', dpi=300, transparent=False)","key":"cseZFXzNsY"},{"type":"output","id":"zQ5gAtx5IdvvDwbIKDzVB","data":[],"key":"GvQVA42pmH"}],"key":"aEfidc5Cy9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a Three Panel Figure Visualizing Reflectivity, Gate ID, and KDP","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FzdS7wsPVj"}],"identifier":"create-a-three-panel-figure-visualizing-reflectivity-gate-id-and-kdp","label":"Create a Three Panel Figure Visualizing Reflectivity, Gate ID, and KDP","html_id":"create-a-three-panel-figure-visualizing-reflectivity-gate-id-and-kdp","implicit":true,"key":"a29JBicNYp"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that we understand how valuable these corrections can be, let’s create a summary figure, giving a quick overview of the scatterers and associated polarimetric fields.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HJx1lXk2VJ"}],"key":"OoGjnmFZaO"}],"key":"Pj9Qg27oNu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarMapDisplay(radar)\nfig = plt.figure(figsize=(18,5))\n\n# Extract the latitude and longitude of the radar and use it for the center of the map\nlat_center = round(radar.latitude['data'][0], 2)\nlon_center = round(radar.longitude['data'][0], 2)\n\nprojection = ccrs.PlateCarree()\n\n# Determine the ticks\nlat_ticks = np.arange(lat_center-2, lat_center+2, .5)\nlon_ticks = np.arange(lon_center-2, lon_center+2, .5)\n\nax1 = plt.subplot(131, projection=projection)\ndisplay.plot_ppi_map(\"corrected_reflectivity\", 0, resolution='10m', ax=ax1, lat_lines=lat_ticks, lon_lines=lon_ticks)\n\n\nax2 = plt.subplot(132, projection=projection)\ngate_ids = radar.fields[\"gate_id\"][\"flag_meanings\"].split(\" \")\nticks = np.arange(len(gate_ids))\nboundaries = np.arange(-0.5, len(gate_ids))\nnorm = mpl.colors.BoundaryNorm(boundaries, 256)\ndisplay.plot_ppi_map(\"gate_id\", 0, ax=ax2, lat_lines=lat_ticks, resolution='10m', lon_lines=lon_ticks, cmap='LangRainbow12', ticks=ticks, norm=norm, ticklabs=gate_ids)\n\nax3 = plt.subplot(133,projection=projection)\ndisplay.plot_ppi_map(\"filtered_corrected_specific_diff_phase\", 0, resolution='10m', ax=ax3, vmin=0, vmax=4, cmap='Carbone42', lat_lines=lat_ticks, lon_lines=lon_ticks)\n\nplt.tight_layout()\nplt.savefig('three_panel_summary_cacti.png', dpi=300, transparent=False)","key":"P5rlec8ClD"},{"type":"output","id":"Lc7qGsIbPpwEzN0FxcGH5","data":[],"key":"EbIpump4gD"}],"key":"mfPHqjm6QD"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yMFIAjWFpA"},{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"A1OKxAFtVH"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"oqahGcV29F"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this example, we walked through how to access ","key":"R4QltiBB8H"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"zlZSRx7BRU"}],"key":"Yo1agt27e9"},{"type":"text","value":" data from a field campaign in Argentina, plot a quick look of the data, and compare corrected and uncorrected dual-pol variables!","key":"p9dsx6DQyr"}],"key":"BVIaWMZEU9"},{"type":"heading","depth":3,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"What’s Next?","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"S0YGMHpivN"}],"identifier":"whats-next","label":"What’s Next?","html_id":"whats-next","implicit":true,"key":"tMZBsFIelk"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We will showcase other data workflow examples, including field campaigns in other regions and data access methods from other data centers.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KTMeGrewhq"}],"key":"HyZchLYUpx"}],"key":"SVzSe50Pqb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and References","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xICM07hJJu"}],"identifier":"resources-and-references","label":"Resources and References","html_id":"resources-and-references","implicit":true,"key":"y41Wlji6rt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://adc.arm.gov/discovery","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"ARM Data Discovery","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZR1pgyWYab"}],"urlSource":"https://adc.arm.gov/discovery","key":"nKOMPr0k2t"}],"key":"bQrscmfSyK"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://www.arm.gov/research/campaigns/amf2018cacti","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"CACTI Field Campaign","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OGAZGoHBdl"}],"urlSource":"https://www.arm.gov/research/campaigns/amf2018cacti","key":"DBdetSEM1M"}],"key":"U9McleYtSA"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"CSAPR Radar Data:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YWcCSkDVDD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Bharadwaj, N., Collis, S., Hardin, J., Isom, B., Lindenmaier, I., Matthews, A., & Nelson, D. C-Band Scanning ","key":"grUCNurAzC"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"NLpUSm68tE"}],"key":"lfFhOXozHm"},{"type":"text","value":" Precipitation Radar (CSAPR2CFR). Atmospheric Radiation Measurement (","key":"fG7M5cZWAZ"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"AmoxEbE7KU"}],"key":"bA5Gzy2gro"},{"type":"text","value":") User Facility. ","key":"ytGBmNS67D"},{"type":"cite","url":"https://doi.org/10.5439/1467901","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Bharadwaj ","key":"BFdIrEiZJA"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"GCJLKYBEYo"}],"key":"rDRsWt2TlT"},{"type":"text","value":" (2021)","key":"Gunia6sMUo"}],"kind":"narrative","label":"https://doi.org/10.5439/1467901","identifier":"https://doi.org/10.5439/1467901","enumerator":"1","key":"EHZvPhWAfK"}],"key":"YKxcJSlh3N"}],"key":"onuTVhmYDP"}],"key":"ADfHHtsp1b"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Py-ART:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wYDlMwvfC6"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helmus, J.J. & Collis, S.M., (2016). The Python ","key":"VrTXSI3Qz4"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"SXeRjrmgJU"}],"key":"bUvDAjSmdJ"},{"type":"text","value":" Radar Toolkit (Py-ART), a Library for Working with Weather Radar Data in the Python Programming Language. Journal of Open Research Software. 4(1), p.e25. DOI: ","key":"HT9roqLAb2"},{"type":"cite","url":"http://doi.org/10.5334/jors.119","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helmus & Collis (2016)","key":"VtqB9keRI8"}],"kind":"narrative","label":"Helmus_2016","identifier":"http://doi.org/10.5334/jors.119","enumerator":"2","key":"EbWKIs5Y9X"}],"key":"EoarxQSMAS"}],"key":"xdHiZSl3EK"}],"key":"oD0DylhrYn"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"ACT:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"CWatdrMiqK"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Adam Theisen, Ken Kehoe, Zach Sherman, Bobby Jackson, Alyssa Sockol, Corey Godine, Max Grover, Jason Hemedinger, Jenni Kyrouac, Maxwell Levin, Michael Giansiracusa (2022). The Atmospheric Data Community Toolkit (ACT). Zenodo. DOI: ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ej40ve2dmT"},{"type":"cite","url":"https://doi.org/10.5281/zenodo.6712343","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Theisen ","key":"vjIP9VIVaU"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"yopDYOleru"}],"key":"LN8Lxrdws4"},{"type":"text","value":" (2022)","key":"d0QJQdnw3D"}],"kind":"narrative","label":"https://doi.org/10.5281/zenodo.6712343","identifier":"https://doi.org/10.5281/zenodo.6712343","enumerator":"3","key":"h09nRyV964"}],"key":"x7T7WfFHoE"}],"key":"kIfRNSGnjk"}],"key":"CO7CuGqKPz"}],"key":"Od1qrndDCk"}],"key":"NJNIUEmiQC"}],"key":"PMHOCpnlsR"},"references":{"cite":{"order":["https://doi.org/10.5439/1467901","Helmus_2016","https://doi.org/10.5281/zenodo.6712343"],"data":{"https://doi.org/10.5439/1467901":{"label":"https://doi.org/10.5439/1467901","enumerator":"1","doi":"10.5439/1467901","html":"Bharadwaj, N., Collis, S., Hardin, J., Isom, B., Lindenmaier, I., Matthews, A., Nelson, D., Feng, Y.-C., Rocque, M., Wendler, T., & Castro, V. (2021). <i>C-Band Scanning ARM Precipitation Radar, 2nd Generation</i>. Atmospheric Radiation Measurement (ARM) Archive, Oak Ridge National Laboratory (ORNL), Oak Ridge, TN (US); ARM Data Center, Oak Ridge National Laboratory (ORNL), Oak Ridge, TN (United States). <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.5439/1467901\">10.5439/1467901</a>","url":"https://doi.org/10.5439/1467901"},"Helmus_2016":{"label":"Helmus_2016","enumerator":"2","doi":"10.5334/jors.119","html":"Helmus, J. J., & Collis, S. M. (2016). The Python ARM Radar Toolkit (Py-ART), a Library for Working with Weather Radar Data in the Python Programming Language. <i>Journal of Open Research Software</i>, <i>4</i>(1), 25. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.5334/jors.119\">10.5334/jors.119</a>","url":"https://doi.org/10.5334/jors.119"},"https://doi.org/10.5281/zenodo.6712343":{"label":"https://doi.org/10.5281/zenodo.6712343","enumerator":"3","doi":"10.5281/ZENODO.6712343","html":"Theisen, A., Kehoe, K., Sherman, Z., Jackson, B., Sockol, A., Godine, C., Grover, M., Hemedinger, J., Kyrouac, J., Levin, M., & Giansiracusa, M. (2022). <i>ARM-DOE/ACT: ACT Release v1.1.9</i>. Zenodo. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.5281/ZENODO.6712343\">10.5281/ZENODO.6712343</a>","url":"https://doi.org/10.5281/ZENODO.6712343"}}}},"footer":{"navigation":{"prev":{"title":"Specific Differential Phase (K_{DP}) retrieval methods comparison","url":"/notebooks/example-workflows/kdp-comparison","group":"Example Workflows"},"next":{"title":"2D objective analysis of weather radar RHI scan: Fast Barnes Interpolation Example","url":"/notebooks/example-workflows/fastbarnes-interpolation-rhi","group":"Example Workflows"}}},"domain":"http://localhost:3000"}